{"name": "test_Store_homePagetitle[firefox]", "status": "broken", "statusDetails": {"message": "NotADirectoryError: [WinError 267] The directory name is invalid: 'C:\\\\Users\\\\rubyk\\\\.wdm\\\\drivers\\\\geckodriver\\\\win64\\\\v0.30.0\\\\geckodriver.exe'", "trace": "request = <SubRequest 'init_driver' for <Function test_Store_homePagetitle[firefox]>>\n\n    @pytest.fixture(params=['firefox'],scope='class')\n    def init_driver(request):\n        if request.param == \"edge\":\n    \n            value = webdriver.Edge(executable_path=\"resources/msedgedriver.exe\")\n            print(\"****** Browser MS Edge ******\")\n        if request.param == \"firefox\":\n>           value = webdriver.Firefox(GeckoDriverManager().install())\n\ntestCases\\conftest.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\Virtual Environmemts\\New Venv\\lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py:159: in __init__\n    firefox_profile = FirefoxProfile(firefox_profile)\n..\\Virtual Environmemts\\New Venv\\lib\\site-packages\\selenium\\webdriver\\firefox\\firefox_profile.py:74: in __init__\n    shutil.copytree(self.profile_dir, newprof,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsrc = 'C:\\\\Users\\\\rubyk\\\\.wdm\\\\drivers\\\\geckodriver\\\\win64\\\\v0.30.0\\\\geckodriver.exe', dst = 'C:\\\\Users\\\\rubyk\\\\AppData\\\\Local\\\\Temp\\\\tmpk6y1tbor\\\\webdriver-py-profilecopy'\nsymlinks = False, ignore = <function ignore_patterns.<locals>._ignore_patterns at 0x0000017DC7AF4E50>, copy_function = <function copy2 at 0x0000017DC4265EE0>\nignore_dangling_symlinks = False, dirs_exist_ok = False\n\n    def copytree(src, dst, symlinks=False, ignore=None, copy_function=copy2,\n                 ignore_dangling_symlinks=False, dirs_exist_ok=False):\n        \"\"\"Recursively copy a directory tree and return the destination directory.\n    \n        dirs_exist_ok dictates whether to raise an exception in case dst or any\n        missing parent directory already exists.\n    \n        If exception(s) occur, an Error is raised with a list of reasons.\n    \n        If the optional symlinks flag is true, symbolic links in the\n        source tree result in symbolic links in the destination tree; if\n        it is false, the contents of the files pointed to by symbolic\n        links are copied. If the file pointed by the symlink doesn't\n        exist, an exception will be added in the list of errors raised in\n        an Error exception at the end of the copy process.\n    \n        You can set the optional ignore_dangling_symlinks flag to true if you\n        want to silence this exception. Notice that this has no effect on\n        platforms that don't support os.symlink.\n    \n        The optional ignore argument is a callable. If given, it\n        is called with the `src` parameter, which is the directory\n        being visited by copytree(), and `names` which is the list of\n        `src` contents, as returned by os.listdir():\n    \n            callable(src, names) -> ignored_names\n    \n        Since copytree() is called recursively, the callable will be\n        called once for each directory that is copied. It returns a\n        list of names relative to the `src` directory that should\n        not be copied.\n    \n        The optional copy_function argument is a callable that will be used\n        to copy each file. It will be called with the source path and the\n        destination path as arguments. By default, copy2() is used, but any\n        function that supports the same signature (like copy()) can be used.\n    \n        \"\"\"\n        sys.audit(\"shutil.copytree\", src, dst)\n>       with os.scandir(src) as itr:\nE       NotADirectoryError: [WinError 267] The directory name is invalid: 'C:\\\\Users\\\\rubyk\\\\.wdm\\\\drivers\\\\geckodriver\\\\win64\\\\v0.30.0\\\\geckodriver.exe'\n\nC:\\Program Files (x86)\\Python39\\lib\\shutil.py:563: NotADirectoryError"}, "attachments": [{"name": "log", "source": "d1f7e9cd-dd99-4598-aadb-fe40a26d19fd-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "init_driver", "value": "'firefox'"}], "start": 1642604429498, "stop": 1642604429498, "uuid": "6185bc4e-c84e-4431-8cf9-281f66abb246", "historyId": "b9f6cdc0869488d1cd7eb9a47c4c097b", "testCaseId": "132c5c89dd277c831bd6a9db30a6156f", "fullName": "test_shopping_cart.Test_Shopping_Cart#test_Store_homePagetitle", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "tag", "value": "sanity"}, {"name": "suite", "value": "test_shopping_cart"}, {"name": "subSuite", "value": "Test_Shopping_Cart"}, {"name": "host", "value": "LAPTOP-ESSL3DDB"}, {"name": "thread", "value": "14920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_shopping_cart"}]}